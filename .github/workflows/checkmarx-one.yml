name: Checkmarx Scan

# Controls when the workflow will run
on:
  #pull_request:
  #  types: [opened, reopened, synchronize]
  #  branches: [ "main" ]
  #push: 
  #  branches:
  #  - main
  workflow_dispatch: # *** this adds a run button ***

permissions:
  contents: read

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    permissions:
      contents: read # for actions/checkout to fetch code
      security-events: write # for github/codeql-action/upload-sarif to upload SARIF results
      actions: read # only required for a private repository by github/codeql-action/upload-sarif

    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # This step checks out a copy of your repository.
      - name: Checkout repository
        uses: actions/checkout@v3.3.0
      # This step creates the Checkmarx One scan
      - name: Checkmarx One scan
        uses: checkmarx/ast-github-action@main
        with:
          # cx_apikey: ${{ secrets.API_KEY }}
          base_uri: https://ast.checkmarx.net
          cx_client_id: ${{ secrets.CLIENT_ID }}
          cx_client_secret: ${{ secrets.CLIENT_SECRET }}
          cx_tenant: ${{ secrets.TENANT }}
          additional_params: --scan-types sast,sca,iac-security,api-security --report-format sarif --output-name cxresults
         # additional_params: --threshold sast-high=10 --project-name allengayCx.JavaVulnerableLab.GitHubAction --project-tags id:tagFromYML --report-format sarif --output-path . --output-name cx_result
      - name: Upload SARIF file
        uses: github/codeql-action/upload-sarif@v3
        with:
          # Path to SARIF file relative to the root of the repository
          sarif_file: cxresults.sarif
